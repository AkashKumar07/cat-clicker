{"version":3,"sources":["List/List.js","Card/Card.js","CatGallery/CatGallery.js","EditFormButton/EditFormButton.js","App.js","serviceWorker.js","index.js","Card/Card.module.css","App.module.css","CatGallery/CatGallery.module.css","EditFormButton/EditFormButton.module.css"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","color","border","padding","number","borderRadius","margin","fontSize","display","flexDirection","justifyContent","textAlign","alignItems","listItem","SelectedListItem","props","classes","className","List","component","aria-label","Divider","data","map","index","Fragment","key","_id","ListItem","button","selected","onClick","current","handleListItemClick","name","clicks","Card","React","useState","cat","setCat","loading","setLoading","useEffect","Axios","get","then","res","catch","error","console","log","clk","Paper","id","newClicks","patch","e","incrementClick","type","height","timeout","src","image","alt","CatGallery","focusCard","style","EditFormButton","setData","form","setForm","setName","setImage","setClicks","changed","setChanged","Button","marginLeft","variant","noValidate","autoComplete","TextField","label","value","onChange","target","post","a","setCurrent","added","marginRight","App","setIndex","addedNew","setAddedNew","cardDiv","useRef","length","handleClicks","handleCurrent","ref","scrollIntoView","behavior","block","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"oRAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1C,kBAAkB,CACdD,WAAa,UACbE,MAAO,QACP,UAAU,CACNJ,gBAAiB,YAGzBK,OAAS,oBACT,kBAAkB,CACdC,QAAS,IAGfC,OAAQ,CACJC,aAAc,OACd,MAAO,CACHC,OAAQ,SACRL,MAAO,QACPM,SAAU,SAEZV,gBAAiB,UACnBW,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,UAAW,SACXC,WAAY,UAEhBC,SAAU,CACNL,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBE,WAAY,SACZjB,MAAO,OACP,MAAO,CACHW,OAAQ,eAKH,SAASQ,EAAiBC,GACvC,IAAMC,EAAUzB,IAMhB,OACE,yBAAK0B,UAAWD,EAAQtB,MACtB,kBAACwB,EAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,wBAC7B,kBAACC,EAAA,EAAD,MACCN,EAAMO,KAAKC,KAAI,SAACD,EAAME,GAEnB,OACE,kBAAC,IAAMC,SAAP,CAAgBC,IAAKJ,EAAKK,KAC1B,kBAACC,EAAA,EAAD,CACAF,IAAKJ,EAAKK,IACVE,QAAM,EACNC,SAAUf,EAAMS,QAAUA,EAC1BO,QAAS,kBAhBK,SAACP,GACpBT,EAAMiB,QAAQR,GAgBPS,CAAoBT,KAEtB,yBAAKP,UAAWD,EAAQH,UACxB,2BAAG,2BAAIS,EAAKY,OACZ,yBAAKjB,UAAWD,EAAQZ,QACxB,2BAAIkB,EAAKa,WAIT,kBAACd,EAAA,EAAD,Y,qBCfDe,EAxDF,SAACrB,GACV,IAAMiB,EAAUjB,EAAMiB,QADF,EAEEK,IAAMC,SAAS,IAFjB,mBAEbC,EAFa,KAERC,EAFQ,OAGUH,IAAMC,UAAS,GAHzB,mBAGbG,EAHa,KAGJC,EAHI,KAKpBL,IAAMM,WAAU,WACZD,GAAW,GACXE,IAAMC,IAAI,8CAA+Cb,GACxDc,MAAK,SAACC,GACHP,EAAOO,EAAIzB,MACXoB,GAAW,MAEdM,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAElB,CAACjB,EAASjB,EAAMqC,MAclB,OACI,kBAAC,IAAM3B,SAAP,KACI,kBAAC4B,EAAA,EAAD,CAAOtB,QAAS,kBAdH,SAACI,EAAQmB,GAC1B,IAAMC,EAAYpB,EAAS,EAC3BS,IAAMY,MAAM,8CAA+CF,EAAG,CAC3DnB,OAASoB,IAEZT,MAAK,SAACC,GACKhC,EAAMoB,YACfa,OAAM,SAACS,GACLP,QAAQC,IAAI,YAMSO,CAAenB,EAAIJ,OAAQI,EAAIZ,MAAMV,UAAWD,WAChEyB,EAAS,yBAAKxB,UAAWD,WAAiB,kBAAC,IAAD,CACnC2C,KAAK,OACL1D,MAAM,UACN2D,OAAQ,IACRjE,MAAO,IACPkE,QAAS,OAGjB,kBAAC,IAAMpC,SAAP,KACA,wBAAIR,UAAWD,WAAkBuB,EAAIL,MACrC,uBAAGjB,UAAWD,QAAd,wBAAkDuB,EAAIJ,QACtD,yBAAKlB,UAAWD,QAAe8C,IAAKvB,EAAIwB,MAAOC,IAAI,QAClDzB,EAAIJ,QAAQ,GAAKI,EAAIJ,QAAU,EAAI,uBAAGlB,UAAWD,QAAd,UAAwC,KAC3EuB,EAAIJ,QAAQ,GAAKI,EAAIJ,QAAS,GAAI,uBAAGlB,UAAWD,QAAd,SAAsC,KACxEuB,EAAIJ,QAAQ,IAAMI,EAAIJ,QAAU,GAAI,uBAAGlB,UAAWD,QAAd,SAAuC,KAC3EuB,EAAIJ,QAAQ,IAAMI,EAAIJ,QAAS,GAAI,uBAAGlB,UAAWD,QAAd,cAA4C,KAC/EuB,EAAIJ,QAAQ,IAAMI,EAAIJ,QAAS,GAAI,uBAAGlB,UAAWD,QAAd,OAAsC,KACzEuB,EAAIJ,OAAO,GAAK,uBAAGlB,UAAWD,QAAd,YAA2C,S,QCjB7DiD,EAlCI,SAAClD,GAchB,OACI,yBAAKE,UAAWD,cACXD,EAAMO,KAAKC,KAAI,SAACgB,EAAKf,GAClB,OACI,kBAAC6B,EAAA,EAAD,CAAO3B,IAAKa,EAAIZ,IAAKI,QAAS,kBAhBzB,SAACP,EAAMW,EAAQmB,GAC1BvC,EAAMiB,QAAQR,GACrBoB,IAAMY,MAAM,8CAA+CF,EAAG,CAC1DnB,WAEHW,MAAK,SAACC,GACKhC,EAAMoB,OAAO,MACtBa,OAAM,SAACS,GACLP,QAAQC,IAAI,YAEZpC,EAAMmD,YAMsCR,CAAelC,EAAOe,EAAIJ,OAAO,EAAGI,EAAIZ,MAAMV,UAAWD,QACzF,wBAAIC,UAAWD,WAAkBuB,EAAIL,MACrC,uBAAGjB,UAAWD,QAAd,wBAAkDuB,EAAIJ,QACtD,yBAAKlB,UAAWD,QAAe8C,IAAKvB,EAAIwB,MAAOC,IAAI,QACnD,uBAAGG,MAAO,CACN7D,OAAQ,YACRL,MAAO,UACPM,SAAU,UAHd,mB,0BCgFT6D,EAtGQ,SAACrD,GACpB,IAAMiB,EAAUjB,EAAMiB,QADQ,EAENM,mBAAS,IAFH,mBAEvBhB,EAFuB,KAEjB+C,EAFiB,OAGN/B,oBAAS,GAHH,mBAGvBgC,EAHuB,KAGjBC,EAHiB,OAINjC,mBAAS,IAJH,mBAIvBJ,EAJuB,KAIjBsC,EAJiB,OAKJlC,mBAAS,IALL,mBAKvByB,EALuB,KAKhBU,EALgB,OAMFnC,mBAAS,IANP,mBAMvBH,EANuB,KAMfuC,EANe,OAOApC,oBAAS,GAPT,mBAOvBqC,EAPuB,KAOdC,EAPc,KAS9BjC,qBAAU,WACNC,IAAMC,IAAI,8CAA+Cb,GACxDc,MAAK,SAACC,GACHsB,EAAQtB,EAAIzB,MACZkD,EAAQzB,EAAIzB,KAAKY,MACjBuC,EAAS1B,EAAIzB,KAAKyC,OAClBW,EAAU3B,EAAIzB,KAAKa,WAEtBa,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAElB,CAACjB,EAASjB,EAAMqC,MAsDlB,OACI,kBAAC,IAAM3B,SAAP,KACI,yBAAKR,UAAWD,YAChB,yBAAKmD,MAAO,CAACxE,MAAO,OAAQiB,WAAY,SACxC,kBAACiE,EAAA,EAAD,CAAQV,MAAO,CAACW,WAAY,QAAS/C,QAxD1B,WACfwC,GAASD,IAuDqDS,QAAQ,YAAY9E,MAAM,WAApF,cAICqE,EAAO,kBAACjB,EAAA,EAAD,CAAQpC,UAAWD,QAC3B,0BAAMC,UAAWD,OAAcgE,YAAU,EAACC,aAAa,OACvD,kBAACC,EAAA,EAAD,CAAW5B,GAAG,iBAAiB6B,MAAM,OAAOC,MAAOlD,EAAMmD,SA1DxC,SAAC5B,GACtBmB,GAAW,GACXJ,EAAQf,EAAE6B,OAAOF,UAyDb,kBAACF,EAAA,EAAD,CAAW5B,GAAG,iBAAiB6B,MAAM,YAAYC,MAAOrB,EAAOsB,SAtD7C,SAAC5B,GACvBmB,GAAW,GACXH,EAAShB,EAAE6B,OAAOF,UAqDd,kBAACF,EAAA,EAAD,CAAW5B,GAAG,iBAAiB6B,MAAM,SAASC,MAAOjD,EAAQkD,SAlD1C,SAAC5B,GACxBmB,GAAW,GACXF,EAAUjB,EAAE6B,OAAOF,UAiDf,yBAAKnE,UAAWD,aAChB,kBAAC6D,EAAA,EAAD,CAAQ9C,QAxCG,WACZG,IAASZ,EAAKY,MAAQyC,EACrB/B,IAAM2C,KAAK,6CAA6C,CACpDrD,OACA6B,QACA5B,WACDW,KAJH,uCAIQ,WAAMC,GAAN,SAAAyC,EAAA,sEACQzE,EAAM0E,WAAW1C,EAAIzB,KAAKK,KADlC,uBAESZ,EAAM2E,QAFf,uBAGM3E,EAAMoB,SAHZ,2CAJR,uDAQGa,OAAM,SAACS,GACNP,QAAQC,IAAIM,OAEXkB,GAAYZ,IAAUzC,EAAKyC,OAAS5B,IAAWb,EAAKa,QACzDS,IAAMY,MAAM,8CAA8CxB,EAAS,CAC/D+B,QACA5B,WACDW,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAIzB,MACXP,EAAMoB,YACZa,OAAM,SAACS,GACNP,QAAQC,IAAIM,OAmBaU,MAAO,CAAClE,MAAO,QAASJ,gBAAiB,QAAS8F,YAAa,OAAQZ,QAAQ,aAA5G,QAGA,kBAACF,EAAA,EAAD,CAAQ9C,QAlDG,WACf6C,GAAW,GACXJ,EAAQlD,EAAKY,MACbuC,EAASnD,EAAKyC,OACdW,EAAUpD,EAAKa,SA8CkBgC,MAAO,CAAClE,MAAO,QAASJ,gBAAiB,OAAQkF,QAAQ,aAAtF,WAKW,QCCRa,MA7Ff,WAAgB,IAAD,EACWtD,mBAAS,IADpB,mBACNhB,EADM,KACA+C,EADA,OAEiB/B,mBAAS,IAF1B,mBAENN,EAFM,KAEGyD,EAFH,OAGiBnD,oBAAS,GAH1B,mBAGNG,EAHM,KAGGC,EAHH,OAIaJ,mBAAS,GAJtB,mBAINd,EAJM,KAICqE,EAJD,OAKevD,mBAAS,GALxB,mBAKNH,EALM,KAKEuC,EALF,OAMmBpC,oBAAS,GAN5B,mBAMNwD,EANM,KAMIC,EANJ,KAQbpD,qBAAU,WACRD,GAAW,GACXE,IAAMC,IAAI,8CACTC,MAAK,SAACC,GACLsB,EAAQtB,EAAIzB,MACZmE,EAAW1C,EAAIzB,KAAK,GAAGK,KACvBe,GAAW,MACVM,OAAM,SAACS,GACRP,QAAQC,IAAIM,QAEd,IAEF,IAAMuC,EAAUC,iBAAO,QAEvBtD,qBAAU,WACRC,IAAMC,IAAI,8CACTC,KADD,uCACM,WAAOC,GAAP,SAAAyC,EAAA,sEACEnB,EAAQtB,EAAIzB,MADd,WAEDwE,EAFC,gCAGID,EAAS9C,EAAIzB,KAAK4E,OAAS,GAH/B,uBAIIH,GAAY,GAJhB,2CADN,uDAOG/C,OAAM,SAACS,GACRP,QAAQC,IAAIM,QAEd,CAACtB,EAAQ2D,IAEX,IAAMK,EAAe,WAEnBzB,EADkBvC,EAAS,IAIvBiE,EAAgB,SAAC5E,GACrBiE,EAAWnE,EAAKE,GAAOG,KACvBkE,EAASrE,IAoBX,OACE,yBAAKP,UAAWD,OACbyB,EAAS,yBAAKxB,UAAWD,WAAiB,kBAAC,IAAD,CACxC2C,KAAK,OACL1D,MAAM,UACN2D,OAAQ,IACRjE,MAAO,IACPkE,QAAS,OAEZ,kBAAC,IAAMpC,SAAP,KACA,+CACA,yBAAKR,UAAWD,UACd,yBAAKC,UAAWD,YACd,kBAAC,EAAD,CAAMM,KAAQA,EAAMU,QAASoE,EAAe5E,MAASA,KAEvD,yBAAK6E,IAAKL,EAAS/E,UAAWD,YAC5B,kBAAC,EAAD,CAAMoC,IAAKjB,EAAQH,QAASA,EAASG,OAAQgE,KAE/C,yBAAKlF,UAAWD,YACd,kBAAC,EAAD,CAAgByE,WAvBC,SAACnC,GACxBmC,EAAWnC,IAsByCoC,MApC/B,WACrBK,GAAY,IAmC+D/D,QAASA,EAASoB,IAAKjB,EAAQA,OAAQgE,MAGhH,yBAAKlF,UAAWD,YACd,kDACA,kBAAC,EAAD,CAAYkD,UArCA,WACb8B,EAAQhE,SACTgE,EAAQhE,QAAQsE,eAAe,CAC5BC,SAAU,SACVC,MAAO,WAiC0BrE,OAAQgE,EAAcnE,QAASoE,EAAe9E,KAAMA,QCnF1EmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvE,MAAK,SAAAwE,GACJA,EAAaC,gBAEdvE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMuE,a,mBExI5BC,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,QAAU,sBAAsB,QAAU,sBAAsB,KAAO,mBAAmB,QAAU,wB,mBCAlJD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,SAAW,sBAAsB,QAAU,qBAAqB,SAAW,wB,mBCAjJD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,yBAAyB,QAAU,4BAA4B,KAAO,2B,mBCA7KD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,KAAO,6BAA6B,KAAO,6BAA6B,UAAY,oC","file":"static/js/main.43fcb026.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    \"& .Mui-selected\":{\r\n        background : '#0099ff',\r\n        color: 'white',\r\n        \"&:hover\":{\r\n            backgroundColor: '#0099ff'\r\n        }\r\n    },\r\n    border : '1px solid #4a4a4a',\r\n    \"& .MuiList-root\":{\r\n        padding: 0\r\n    }\r\n  },\r\n  number: {\r\n      borderRadius: '30px',\r\n      \"& p\": {\r\n          margin: '0 10px',\r\n          color: 'white',\r\n          fontSize: '1.3em',\r\n      },\r\n        backgroundColor: '#a6a297',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n      alignItems: 'center'\r\n  },\r\n  listItem: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n      \"& p\": {\r\n          margin: '0 10px'\r\n      }\r\n  },\r\n}));\r\n\r\nexport default function SelectedListItem(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleListItemClick = (index) => {\r\n    (() => props.current(index))();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <Divider />\r\n          {props.data.map((data, index)=> {\r\n            // console.log(index);\r\n              return(\r\n                <React.Fragment key={data._id}>\r\n                <ListItem\r\n                key={data._id}\r\n                button\r\n                selected={props.index === index}\r\n                onClick={() => \r\n                  handleListItemClick(index)}\r\n                >\r\n                <div className={classes.listItem}>\r\n                <p><b>{data.name}</b></p>\r\n                <div className={classes.number}>\r\n                <p>{data.clicks}</p>\r\n                </div>\r\n                </div>\r\n                </ListItem>\r\n                <Divider />\r\n                </React.Fragment>\r\n              )\r\n          })}\r\n        \r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport {Paper} from '@material-ui/core'\r\nimport * as classes from './Card.module.css';\r\n\r\n\r\nconst Card = (props) => {\r\n    const current = props.current;\r\n    const [cat, setCat] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        Axios.get('https://cat-clicker-api.herokuapp.com/cats/'+ current)\r\n        .then((res)=>{\r\n            setCat(res.data);\r\n            setLoading(false);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    },[current, props.clk])\r\n\r\n    const incrementClick=(clicks, id)=>{\r\n        const newClicks = clicks + 1;\r\n        Axios.patch('https://cat-clicker-api.herokuapp.com/cats/'+ id,{\r\n           clicks : newClicks\r\n       })\r\n       .then((res)=>{\r\n            (() => props.clicks())()\r\n       }).catch((e)=> {\r\n            console.log('error')\r\n       })\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Paper onClick={() =>incrementClick(cat.clicks, cat._id)} className={classes.catCard}>\r\n                {loading? <div className={classes.loading}><Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        height={100}\r\n                        width={100}\r\n                        timeout={3000} //3 secs\r\n                \r\n                    /></div>:\r\n                <React.Fragment>\r\n                <h2 className={classes.heading}>{cat.name}</h2>\r\n                <p className={classes.para}>No of Times Clicked: {cat.clicks}</p>\r\n                <img className={classes.image} src={cat.image} alt=\"cat\"/>\r\n                {cat.clicks>=0 && cat.clicks <= 5 ? <p className={classes.para}>Infant</p>: null}\r\n                {cat.clicks>=6 && cat.clicks <=12? <p className={classes.para}>Child</p>:null}\r\n                {cat.clicks>=13 && cat.clicks <= 25? <p className={classes.para}>Young</p>: null}\r\n                {cat.clicks>=26 && cat.clicks <=40? <p className={classes.para}>Middle-age</p>: null}\r\n                {cat.clicks>=41 && cat.clicks <=60? <p className={classes.para}>Old</p> : null}\r\n                {cat.clicks>60 ? <p className={classes.para}>Very Old</p> : null}\r\n                </React.Fragment>}\r\n            </Paper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport {Paper} from '@material-ui/core';\r\nimport * as classes from './CatGallery.module.css';\r\n\r\nconst CatGallery = (props) => {\r\n\r\n    const incrementClick=(index,clicks, id)=>{\r\n       (() => props.current(index))();\r\n       Axios.patch('https://cat-clicker-api.herokuapp.com/cats/'+ id,{\r\n           clicks\r\n       })\r\n       .then((res)=>{\r\n            (()=> (props.clicks(1)))();\r\n       }).catch((e)=> {\r\n            console.log('error')\r\n       });\r\n       (()=>props.focusCard())();\r\n    }\r\n    return(\r\n        <div className={classes.catGallery}>\r\n            {props.data.map((cat, index)=>{\r\n                return(\r\n                    <Paper key={cat._id} onClick={() => incrementClick(index, cat.clicks+1, cat._id)} className={classes.card}>\r\n                        <h4 className={classes.heading}>{cat.name}</h4>\r\n                        <p className={classes.para}>No of Times Clicked: {cat.clicks}</p>\r\n                        <img className={classes.image} src={cat.image} alt=\"cat\"/>\r\n                        <p style={{\r\n                            margin: '0 0 0 2px',\r\n                            color: '#0066ff',\r\n                            fontSize: '1.2em'\r\n                        }}>Card Link</p>\r\n                    </Paper>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CatGallery","import React,{useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {Button, Paper, TextField} from '@material-ui/core';\r\nimport * as classes from './EditFormButton.module.css';\r\n\r\nconst EditFormButton = (props) => {\r\n    const current = props.current;\r\n    const [data, setData] = useState({});\r\n    const [form, setForm] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [clicks, setClicks] = useState('');\r\n    const [changed, setChanged] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        Axios.get('https://cat-clicker-api.herokuapp.com/cats/'+ current)\r\n        .then((res)=>{\r\n            setData(res.data);\r\n            setName(res.data.name);\r\n            setImage(res.data.image);\r\n            setClicks(res.data.clicks);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    },[current, props.clk])\r\n\r\n    const toggleForm = () => {\r\n        setForm(!form);\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        setChanged(true);\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        setChanged(true);\r\n        setImage(e.target.value);\r\n    }\r\n\r\n    const handleClicksChange = (e) => {\r\n        setChanged(true);\r\n        setClicks(e.target.value);\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        setChanged(false);\r\n        setName(data.name);\r\n        setImage(data.image);\r\n        setClicks(data.clicks);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if(name !== data.name && changed){\r\n            Axios.post('https://cat-clicker-api.herokuapp.com/cats',{\r\n                name,\r\n                image,\r\n                clicks\r\n            }).then(async(res)=>{\r\n                await (()=> props.setCurrent(res.data._id))()\r\n                await (() => props.added())();\r\n               await (()=>props.clicks())();\r\n            }).catch((e)=> {\r\n                console.log(e);\r\n            })\r\n        }else if(changed && (image !== data.image || clicks !== data.clicks)){\r\n            Axios.patch('https://cat-clicker-api.herokuapp.com/cats/'+current, {\r\n                image,\r\n                clicks\r\n            }).then((res)=> {\r\n                console.log(res.data);\r\n                (()=>props.clicks())();\r\n            }).catch((e)=>{\r\n                console.log(e);\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className={classes.editform}>\r\n            <div style={{width: '100%', alignItems: 'left'}}>\r\n            <Button style={{marginLeft: '20px'}} onClick={toggleForm} variant=\"contained\" color=\"primary\">\r\n                Open Form\r\n            </Button>\r\n            </div>\r\n            {form ? <Paper  className={classes.root}>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n            <TextField id=\"standard-basic\" label=\"Name\" value={name} onChange={handleNameChange}/>\r\n            <TextField id=\"standard-basic\" label=\"Image Url\" value={image} onChange={handleImageChange}/>\r\n            <TextField id=\"standard-basic\" label=\"Clicks\" value={clicks} onChange={handleClicksChange} />\r\n            <div className={classes.buttonDiv}>\r\n            <Button onClick={handleSave} style={{color: 'white', backgroundColor: 'green', marginRight: '5px'}} variant=\"contained\" >\r\n                Save\r\n            </Button>\r\n            <Button onClick={handleUndo} style={{color: 'white', backgroundColor: 'red'}} variant=\"contained\" >\r\n                Undo\r\n            </Button>\r\n            </div>\r\n            </form>\r\n            </Paper> : null}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditFormButton;","import React,{useEffect, useState, useRef} from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport Axios from 'axios';\r\nimport * as classes from './App.module.css';\r\nimport List from './List/List';\r\nimport Card from './Card/Card';\r\nimport CatGallery from './CatGallery/CatGallery';\r\nimport EditFormButton from './EditFormButton/EditFormButton';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [current, setCurrent] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [index, setIndex] = useState(0)\r\n  const [clicks, setClicks] = useState(0);\r\n  const [addedNew, setAddedNew] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.get('https://cat-clicker-api.herokuapp.com/cats')\r\n    .then((res)=> {\r\n      setData(res.data);\r\n      setCurrent(res.data[0]._id)\r\n      setLoading(false)\r\n    }).catch((e)=>{\r\n      console.log(e);\r\n    })\r\n  },[])\r\n\r\n  const cardDiv = useRef('card')\r\n\r\n  useEffect(()=>{\r\n    Axios.get('https://cat-clicker-api.herokuapp.com/cats')\r\n    .then(async (res)=> {\r\n      await setData(res.data);\r\n      if(addedNew){\r\n        await setIndex(res.data.length - 1);\r\n        await setAddedNew(false);\r\n      }\r\n    }).catch((e)=>{\r\n      console.log(e);\r\n    })\r\n  },[clicks, addedNew])\r\n\r\n  const handleClicks = () => {\r\n    const newClicks = clicks + 1;\r\n    setClicks(newClicks);\r\n  }\r\n\r\n  const handleCurrent = (index)=>{\r\n    setCurrent(data[index]._id);\r\n    setIndex(index)\r\n  }\r\n\r\n  const handleAddedNew = () => {\r\n    setAddedNew(true);\r\n  }\r\n\r\n  const focusCard = () => {\r\n    if(cardDiv.current){\r\n      cardDiv.current.scrollIntoView({ \r\n         behavior: \"smooth\", \r\n         block: \"start\"\r\n      })\r\n  }\r\n  }\r\n\r\n  const handleSetCurrent = (id) => {\r\n    setCurrent(id);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.App}>\r\n      {loading? <div className={classes.loading}><Loader\r\n         type=\"Puff\"\r\n         color=\"#00BFFF\"\r\n         height={100}\r\n         width={100}\r\n         timeout={3000} //3 secs\r\n      /></div>:(\r\n      <React.Fragment>\r\n      <h2>Cat Clicker App</h2>\r\n      <div className={classes.mainup}>\r\n        <div className={classes.divSpace}>\r\n          <List data = {data} current={handleCurrent} index = {index}/>\r\n        </div>\r\n        <div ref={cardDiv} className={classes.divSpace} >\r\n          <Card clk={clicks} current={current} clicks={handleClicks}/>\r\n        </div>\r\n        <div className={classes.divSpace}>\r\n          <EditFormButton setCurrent={handleSetCurrent} added={handleAddedNew} current={current} clk={clicks} clicks={handleClicks}/>\r\n        </div>\r\n      </div>\r\n      <div className={classes.maindown}>\r\n        <h2>Cats Image Gallery</h2>\r\n        <CatGallery focusCard={focusCard} clicks={handleClicks} current={handleCurrent} data={data} />\r\n      </div>\r\n      </React.Fragment>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Card_image__3hGge\",\"catCard\":\"Card_catCard__2hFI8\",\"heading\":\"Card_heading__WlAZJ\",\"para\":\"Card_para__2vANx\",\"loading\":\"Card_loading__2HJTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1NwAb\",\"mainup\":\"App_mainup__1i15K\",\"maindown\":\"App_maindown__n8WEg\",\"loading\":\"App_loading__1vPCw\",\"divSpace\":\"App_divSpace__1F7_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catGallery\":\"CatGallery_catGallery__2S3JN\",\"image\":\"CatGallery_image__oS_Av\",\"card\":\"CatGallery_card__aWGRY\",\"heading\":\"CatGallery_heading__3VkgX\",\"para\":\"CatGallery_para__GPsc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editform\":\"EditFormButton_editform__2KhtF\",\"form\":\"EditFormButton_form__1osYJ\",\"root\":\"EditFormButton_root__1MA-i\",\"buttonDiv\":\"EditFormButton_buttonDiv__lhKuq\"};"],"sourceRoot":""}